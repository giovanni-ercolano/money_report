// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: dotenv.env['FIREBASE_API_KEY'] as String,
    appId: dotenv.env['FIREBASE_APP_ID'] as String,
    messagingSenderId: dotenv.env['FIREBASE_MESSAGING_SENDER_ID'] as String,
    projectId: dotenv.env['FIREBASE_PROJECT_ID'] as String,
    authDomain: 'money-report-c87e7.firebaseapp.com',
    storageBucket: dotenv.env['FIREBASE_STORAGE_BUCKET'] as String,
    measurementId: dotenv.env['FIREBASE_MEASUREMENT_ID'] as String,
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDsZNjjozSmDz5YzfGCeSlYZ15aEYBYLCU',
    appId: '1:995716841820:android:ae47c6c4cb3aaceac04199',
    messagingSenderId: '995716841820',
    projectId: 'money-report-c87e7',
    storageBucket: 'money-report-c87e7.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBv7v1NHg23K52QNoU0q896uOMmnQdEC84',
    appId: '1:995716841820:ios:72e4e601d0ba7481c04199',
    messagingSenderId: '995716841820',
    projectId: 'money-report-c87e7',
    storageBucket: 'money-report-c87e7.appspot.com',
    iosClientId:
        '995716841820-hklo4j8cq27l41jtv7i69tiieksv3b2n.apps.googleusercontent.com',
    iosBundleId: 'money.report.com.moneyReport',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyBv7v1NHg23K52QNoU0q896uOMmnQdEC84',
    appId: '1:995716841820:ios:72e4e601d0ba7481c04199',
    messagingSenderId: '995716841820',
    projectId: 'money-report-c87e7',
    storageBucket: 'money-report-c87e7.appspot.com',
    iosClientId:
        '995716841820-hklo4j8cq27l41jtv7i69tiieksv3b2n.apps.googleusercontent.com',
    iosBundleId: 'money.report.com.moneyReport',
  );
}
